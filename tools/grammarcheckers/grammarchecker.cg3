# -*- cg-pre-pipe: "hfst-tokenise -g ../../tools/tokenisers/tokeniser-gramcheck-gt-desc.pmhfst" -*-
# Divvun & Giellatekno - open source grammars for Sámi and other languages
# Copyright © 2000-2017 UiT The arctic University of Norway
# http://giellatekno.uit.no & http://divvun.no
#
# This program is free software; you can redistribute and/or modify
# this file under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version. The GNU General Public License
# is found at http://www.gnu.org/licenses/gpl.html. It is
# also available in the file $GTHOME/LICENSE.txt.
#
# Other licensing options are available upon request, please contact
# giellatekno@hum.uit.no or divvun@hum.uit.no

# ==================================================================== #
#!!       R U S S I A N   G R A M M A R   C H E C K E R
# ==================================================================== #
# ====================================================================

#  Sámi language technology 2000-2017, UiT The arctic University of Norway #

# ---------------------- #
#   Development setup:   #
# ---------------------- #
#
# cd $GTHOME/langs/rus
# ./autogen.sh
# ./configure --enable-apertium --with-hfst --enable-syntax --enable-grammarchecker --enable-tokenisers --enable-alignment --enable-reversed-intersect
# make
# cd tools/grammarcheckers
# make dev
#
# ---------------------- #
#   Then edit/test as:   #
# ---------------------- #
#
# emacs grammarchecker.cg3  # and C-c C-i / C-c C-c if you have cg-mode installed
# echo "Sun ij puátá." | sh modes/rusgram.mode  # from the terminal
#
# ---------------------- #
#   Other debug-pipes:   #
# ---------------------- #
#
# ls modes/
#
# ---------------------- #


# The pipeline (but use modes, above)
#  echo "Sun ij puátá." | hfst-tokenise --giella-cg  tools/tokenisers/tokeniser-gramcheck-gt-desc.pmhfst | vislcg3 -g src/cg3/disambiguator.cg3 -t | vislcg3 -g tools/grammarcheckers/grammarchecker.cg3 -t



      # =========================================== #
      #      Short table of contents                #
      # =========================================== #

      # Delimiters
      # Tags and sets
      # Grammar checking rules

# =============== #
#!! # DELIMITERS
# =============== #

DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>" sent ;

# ================== #
#!! # TAGS AND SETS
# ================== #

SETS


#!! ## Tags


#!! This section lists all the tags inherited from the fst, and used as tags
#!! in the syntactic analysis. The next section, **Sets**, contains sets defined
#!! on the basis of the tags listed here, those set names are not visible in the output.

LIST BOS = (>>>) ; 
LIST EOS = (<<<) ; 

LIST N =  n N ; 
LIST Prop =  np Prop ;
LIST Pr =  pr Pr ; 
LIST Pron =  prn Pron ;
LIST Det =  det Det ; 
LIST Num =  num Num "<[0-9]+>"r ("млн" abbr) ("тыс" abbr)  ("млн" Abbr) ("тыс" Abbr)  ;
LIST A =  adj A ; 
LIST Adv =  adv Adv ; 
LIST CS =  cnjsub CS ; 
LIST CC =  cnjcoo CC ;
LIST Interj =  ij Interj ;
LIST CC =  cnjcoo CC ; 
LIST V =  vblex vbser vbmod V ; 
LIST Pred =  pred Pred ; 
LIST Part =  part Part ; 
LIST Abbr =  abbr Abbr ;
LIST Attr = Attr ;

SET COMMON-N = N - Prop ;

LIST Pass =  pass pasv Pass ;  # Check
LIST V/Pass =  pass V/Pass ; 

LIST Cop =  ("быть" vblex)  ("быть" V)  ;

LIST Guio =  guio "-"  ; 
LIST SafeGuio =  "—"  ; 
LIST Cm =  cm  ; 
LIST Excl =  ("!")  ;
LIST Ques =  ("?")  ;
LIST Sent =  sent  ; 

LIST Percent =  ("<[0-9]+%>"r) percent  ; 
LIST Roman =  roman ("<M{0,4}(CM|CD|D(C{0,3}))?(XC|XL|L(X{0,3}))?(IX|IV|V(I{0,3}))?>"ri num) ("<[MCDXLIVМСХ]+>"ri num)  ("<M{0,4}(CM|CD|D(C{0,3}))?(XC|XL|L(X{0,3}))?(IX|IV|V(I{0,3}))?>"ri Num) ("<[MCDXLIVМСХ]+>"ri Num)  ;
LIST Count =  count Count ; 
#LIST Cipher =  "<[0-9]+>"r  ;
LIST Cipher =  "[0-9]+"r  ;

LIST Pprep =  pprep pobj Pprep ; 
LIST Pers =  pers Pers ;
LIST Paren =  paren Paren ; 

LIST Lparen =  lpar Lparen ; 
LIST Parens =  lpar rpar par Parens ;
LIST Apos =  apos Apos ; 
LIST Quot =  lquot rquot quot Quot ;

LIST Pos = Pos ;
LIST Comp = Comp (comp pred)  ; 
LIST Short = Short short (adj m pred) (adj f pred) (adj mfn pred) (adj nt pred)  ; # pred
LIST Cmp = Cmp cmp  ; 

LIST PrcPast = PrcPast pp  ;
LIST PrcPres = PrcPres pprs  ;

LIST TV = TV tv  ; 
LIST IV = IV iv  ; 

LIST Ant = Ant ant  ; 
LIST Cog = Cog cog  ; 
LIST Al = Al al  ;  # includes Top

LIST Msc = Msc m  ; 
LIST Fem = Fem f  ; 
LIST Neu = Neu nt  ; 

LIST Sg = Sg sg  ; 
LIST Pl = Pl pl  ;

LIST Sg1 = Sg1 (p1 sg)  ; 
LIST Sg2 = Sg2 (p2 sg)  ; 
LIST Sg3 = Sg3 (p3 sg)  ; 
LIST Pl1 = Pl1 (p1 pl)  ; 
LIST Pl2 = Pl2 (p2 pl)  ; 
LIST Pl3 = Pl3 (p3 pl)  ; 

LIST Impf = Impf impf  ; 
LIST Perf = Perf perf  ; 

LIST Ord = Ord ord  ; 
LIST Dem = Dem dem  ; 
LIST Interr = Interr itg  ; 
LIST Rel = Rel rel  ; 

LIST DetIndecl = DetIndecl ("её" det pos) ("его" det pos) ("их" det pos)  ;

LIST Nom = Nom nom  ; 
LIST Gen = Gen gen  ; 
LIST Dat = Dat dat  ;
LIST Acc = Acc acc  ;
LIST Ins = Ins ins  ; 
LIST Prp = Prp prp  ; 

LIST Loc = Loc loc  ; 
LIST Par = Par par  ; 

LIST Anim = Anim aa an  ; 
LIST Inanim = Inanim nn an  ; 

LIST Inf = Inf inf  ; 
LIST Imper = Imper imp  ; 
LIST Past = Past past  ; 
LIST Fin = Past Pres Fut past pres fut  ; 

LIST Prn/Sebe =  ("<себе>"i prn)  ("<себе>"i Pron)  ;
LIST Prn/Tebe =  ("<тебе>"i prn)  ("<тебе>"i Pron)  ;
LIST Prn/Komu =  ("<кому>"i prn)  ("<кому>"i Pron)  ;
LIST Prn/Tot =  ("тот"i prn)  ("<тот>"i Pron)  ;
LIST Prn/To =  ("то"i prn)  ("<то>"i Pron)  ;
LIST Prn/Togo =  ("<того>"i prn)  ("<того>"i Pron)  ;

LIST Num/Neskolko =  ("несколько" num)  ("несколько" Num)  ;
LIST Num/Tri =  ("три" num)  ("три" Num)  ;

LIST CS/Čto =  ("что²" cnjsub)  ("что²" CS)   ;
LIST CC/I =  ("и" cnjcoo)  ; 

LIST Paren/Konečno =  ("конечно" paren)  ("конечно" Paren)  ; 

LIST Jest =  ("<есть>"i)  ;

LIST Prop/Maša =  ("Маша" np)  ("Маша" N Prop)  ;

LIST Pr/V = ("в" pr) ("в" Pr) ;
LIST Pr/Na = ("на" pr) ("на" Pr) ;
LIST Pr/S = ("с" pr) ("с" Pr) ;
LIST Pr/Po = ("по" pr) ("по" Pr) ;
LIST Pr/Iz = ("из" pr) ("из" Pr) ;
LIST Pr/K = ("к" pr) ("к" Pr) ;
LIST Pr/Ot = ("от" pr) ("от" Pr) ;
LIST Pr/Dlja = ("для" pr) ("для" Pr) ; 
LIST Pr/Do = ("до" pr) ("до" Pr) ;
LIST Pr/Za = ("за" pr) ("за" Pr) ;
LIST Pr/O = ("о" pr) ("о" Pr) ;
LIST Pr/Pri = ("при" pr) ("при" Pr) ;
LIST Pr/U = ("у" pr) ("у" Pr) ;
LIST Pr/Posle = ("после" pr) ("после" Pr) ;
LIST Pr/Pod = ("<под>"i pr) ("<под>"i Pr) ;
LIST Pr/Meždu = ("между" pr) ("между" Pr) ;
LIST Pr/Okolo = ("около" pr) ("около" Pr) ; 
LIST Pr/Čerez = ("через" pr) ("через" Pr) ;
LIST Pr/Protiv = ("против" pr) ("против" Pr) ;
LIST Pr/Naprotiv = ("напротив" pr) ("напротив" Pr) ;
LIST Pr/Nad = ("над" pr) ("над" Pr) ;
LIST Pr/Bez = ("без" pr) ("без" Pr) ; 
LIST Pr/Sredi = ("среди" pr) ("среди" Pr) ;
LIST Pr/Iz-za = ("из-за" pr) ("из-за" Pr) ;
LIST Pr/Pered = ("перед" pr) ("перед" Pr) ;
LIST Pr/Blagodarja = ("благодаря" pr) ("благодаря" Pr) ;
LIST Pr/Krome = ("кроме" pr) ("кроме" Pr) ;
LIST Pr/Vključaja = ("включая" pr) ("включая" Pr) ; 
LIST Pr/Soglasno = ("согласно" pr) ("согласно" Pr) ;
LIST Pr/Pomimo = ("помимо" pr) ("помимо" Pr); 
LIST Pr/Vnutri = ("внутри" pr) ("внутри" Pr) ;
 
LIST Pr/Nado = ("<надо>"i pr) ("<надо>"i Pr) ;
 
LIST N/Filma = ("фильма" n) ("фильма" N) ;
LIST N/Film = ("фильм" n) ("фильм" N) ;
LIST N/Bukva = ("буква" n) ("буква" N) ;
LIST N/Goda = ("<года>"i n) ("<года>"i N) ;
LIST N/Godah = ("<годах>"i n) ("<годах>"i N) ;
LIST N/Potom = ("<потом>"i n) ("<потом>"i N) ;
LIST N/Krov = ("кровь" n) ("кровь" N) ;
LIST N/Tomu = ("<тому>"i n) ("<тому>"i N) ;
LIST N/Golova = ("голова" n) ("голова" N) ;
LIST N/Denga = ("деньга" n) ("деньга" N) ;
LIST N/Voda = ("<вода>"i n) ("<вода>"i N) ; 
LIST N/Vode = ("<водe>"i n) ("<водe>"i N) ; 
LIST N/Beregu = ("<берегу>"i n) ("<берегу>"i N) ;
LIST N/Vek = ("век¹" n) ("век¹" N);
LIST N/Veko = ("веко" n) ("веко" N) ;
LIST N/Vtora = ("<второй>"i n) ("<второй>"i N); 
LIST N/Mat = ("мать" n) ("мать" N) ;
LIST N/Mater = ("матерь" n) ("матерь" N) ;
LIST N/Pomoč = ("помочь" n) ("помочь" N) ;
LIST N/Polku = ("<полку>"i n) ("<полку>"i N); 
LIST N/Mire = ("<мире>"i n) ("<мире>"i N); 
LIST N/Miro = ("миро" n) ("миро" N); 
LIST N/Metr = ("метр" n) ("километр" n) ("метр" N) ("километр" n);
LIST N/Primer = ("пример" n) ("пример" N);
LIST N/Delo = ("дело" n) ("дело" N) ;
LIST N/Pravilo¹ = ("правило¹" n) ("правило¹" N) ;
LIST N/Pravilo² = ("правило²" n) ("правило²" N) ;
LIST N/Noga = ("нога" n) ("нога" N) ;
LIST N/Lob = ("лоб" n) ("лоб" N) ;
LIST N/Byli = ("<были>"i n) ("<были>"i N) ;
LIST N/On = ("он²" n) ("он²" N) ;
LIST N/Stradanje = ("страданье" n) ("страданье" N) ;
LIST N/Stradanie = ("страдание" n) ("страдание" N) ;
LIST N/Slony = ("слоны" n) ("слоны" N) ;
LIST N/Denj = ("день" n) ("день" N) ;
LIST N/Čelovek = ("человек" n) ("человек" N) ;
LIST N/Ljudi = ("люди²" n) ("люди²" N) ;
LIST N/Maj = ("май" n) ("май" N) ;
 
LIST A/Malo = ("<мало>"i adj) ("<мало>"i A) ;
LIST A/Božij = ("божий" adj) ("божий" A) ;
LIST A/Metrov = ("<метров>"i adj) ("<километров>"i adj) ("<метров>"i A) ("<километров>"i adj) ;
LIST A/Prišlij = ("пришлый" adj) ("пришлый" A) ; 
LIST A/Boevoj = ("боевой" adj) ("боевой" A) ;
 
LIST Adv/I = ("и" adv) ("и" Adv) ; 
LIST Adv/Ješë = ("ещё" adv) ("ещё" Adv) ; 
LIST Adv/Krugom² = ("кругом²" adv) ("кругом²" Adv) ; 
LIST Adv/Celikom = ("целиком" adv) ("целиком" Adv) ; 
LIST Adv/Posle = ("после" adv) ("после" Adv) ; 
LIST Adv/Neskolko = ("несколько" adv) ("несколько" Adv) ;
 
LIST V/Oblivatsja = ("обливаться" vblex) ("обливаться" V) ;
LIST V/Pahnut = ("пахнуть" vblex) ("пахнуть" V) ;
LIST V/Isteč = ("истечь" vblex) ("истечь" V) ;
LIST V/Vypuskat = ("выпускать" vblex) ("выпускать" V) ;
LIST V/Takaja = ("<такая>"i vblex) ("<такая>"i V) ; 
LIST V/Primer = ("<пример>"i vblex) ("<пример>"i V) ; 
LIST V/Dela = ("<дела>"i vblex) ("<дела>"i V) ; 
LIST V/Pisat = ("писать" vblex) ("написать" vblex) ("описать" vblex) ("писать" V) ("написать" vblex) ("описать" vblex) ; 
LIST V/Prijti = ("прийти" vblex) ("прийти" V) ; 
LIST V/Stroit = ("строит" vblex) ("строит" V) ; 
LIST V/Vyhodit = ("выходить" vblex) ("выходить¹⁻²" vblex) ("выходить" V) ("выходить¹⁻²" vblex) ; 
LIST V/Idjot = ("идти" vblex pres) ("идти" V Pres) ;
LIST V/Byt = ("быть" vblex) ("быть" V) ; 
 
LIST Ij/Na = ("на" ij) ("на" Interj) ;
LIST Ij/Ih = ("их²" ij) ("их²" Interj) ;
LIST Ij/I = ("и¹" ij) ("и¹" Interj) ;
LIST Ij/A = ("а¹" ij) ("а¹" Interj) ; 
LIST Ij/No = ("но²" ij) ("но²" Interj) ; 

LIST O = "о" ; 
LIST Ja = "я" "я¹" "я²" ; 
LIST I = "и" ;
LIST No = "но" ; 
LIST Ne = "не" ; 
LIST Samyj = "самый" ; 
LIST Kotoryj = "который" ;
LIST Posle = "после" ;
LIST Čto = "что¹" "что²" ;
LIST Kto = "кто" ; 
LIST Nazad = "назад" ;
LIST Sliškom = "слишком" ; 
LIST Našej = "<нашей>"i ; 
LIST Sej = "сей" ; 
LIST Takže = "также" ; 
LIST Tože = "тоже" ; 
LIST Tak = "так" ; 
LIST Kak = "как" ;
LIST Tak_I = "так и" ; 
LIST Sam = "сам" ; 
LIST Bylo = "<было>"i ; 
LIST U = "у¹" "у²" "у" ; 
LIST Vo = "<во>"i ; 
LIST Ili = "или" ; 
LIST Že = "же" ; 
LIST To = "то" ; 
LIST Eto = "это" ;
LIST Oneletterp = "с" "в" "к";

LIST PrefixNado = "<[бвгджзйклмнпрстуфхцчшщъь][бвгджзйклмнпрстуфхцчшщъь].*>"r ; 

LIST NumNotNom = "<([0-9])*[023456789]>"r "<([0-9])*11>"r ;

LIST Unknown = "\*.*"r ;

LIST LesserNum = "полтора" "два" "три" "четыре" "обо" "<([2-90]+)*[1-4]>"r ;

LIST Poltora = "полтора" ; 
LIST Pjat = "пять" "5" "<([0-9])*5>"r ; 
LIST Sto = "сто" "100" ; 
LIST Tysjača = "тысяча" "1000" ; 

LIST Day = "день" ; 
LIST Month = "месяц" ;
LIST Months = "январь" "февраль" "март" "апрель" "май" "июнь" "июль" "август" "сентябрь" "октябрь" "ноябрь" "декабрь" ; 
LIST Year = "год" "год¹" ("г." abbr) ;
LIST Century = "век" ; 
LIST Season = "сезон" ; 
LIST Seasons = "весна" "лето" "осень" "зима" ;
LIST TimeOfDay = "день" "вечер" "утро" "ночь" ; 
LIST Polovina = "половина" ;
LIST CardPoint = "западный" "южный" "юго-западный" "северный" "восточный" "юго-восточный" "северо-восточный" "северо-западный" "центральный" ;
LIST TimePart = "начало" "конец" "течение" "середина" "половина" ; 
LIST LetterEnum = "модель" "план" "вариант" "коэффициент" "витамин" "марка" "полимиксин" "система" ; 
LIST PersonTitleMsc = "князь" "император" "принц" "атаман" "царь"  "митрополит" ;
LIST PersonTitleFem = "императрица" ;

LIST PersonTitleBoth = "президент" "генерал" "секретарь" "обер-прокурор" ;
LIST Profession = "историк" "академик" "химик" "секретарь" "философ" "врач" ; 
LIST Toponymy = "река" ;

SET PersonTitle = PersonTitleMsc | PersonTitleFem | PersonTitleBoth ; 

LIST Letters = ("же" n) ("у²" n) ("о²" n) ("и²" n) ("а²" n) ("в" n) ("с" n) ("к" n) ; # etc.

LIST Notes = ("до" n) ; # etc.

LIST InsAdv = "часом" "потом" "кругом" "рядом" "летом" "разом" "весной" "зимой" "осенью" "утром" "вечером" "днём" "ночью"  ; 

LIST AccAdv = "вечер" "день" "раз" "минута" "неделя" ;

LIST Title = ("<[А-ЯA-Z][а-яa-z]+>"r) ;
LIST Majusc = ("<[А-ЯA-Z]+>"r) ;
LIST Minusc = ("<[а-яa-z]+>"r) ;

LIST DicTitle = ("[А-ЯA-Z][а-яa-z]+"r) ;
LIST DicMajusc = ("[А-ЯA-Z]+"r) ;
LIST DicMinusc = ("[а-яa-z]+"r) ;

LIST Prob = prb ;

LIST Facul = fac ;

LIST V/Gen = "достичь" "достигнуть" "добиться" "бояться" "выдерживать" "выражать" "давать" "добавлять" "добиваться" "добывать" "дожидаться" "допускать" "жаждать" "жалеть" "желать" "заменять" "засыпать" "избегать" "искать" "касаться" "колоть" "кушать" "лишать" "лишаться" "набирать" "наливать" "ожидать" "отдыхать" "покупать" "предвидеть" "прибавлять" "приносить" "просить" "проходить" "рекомендовать" "слушаться" "спрашивать" "стесняться" "стоит" "требовать" "тянуть" "удерживать" "хватит" "хоронить" "отсутствовать" "отговорить" "опасаться" "вспоминать" "хотеть" "требовать" ; 

LIST V/Dat = "адресовать" "варить" "вводить" "вернуть" "взглянуть" "возить" "возмещать" "возражать" "вручать" "встречаться" "выписать" "гарантировать" "готовить" "грозить" "гулять" "дарить" "докладывать" "жаловаться" "жать" "изменять" "кивать" "класть" "копать" "кричать" "курить" "ломать" "махать" "менять" "мешать" "мыть" "навязывать" "надоедать" "назначать" "напоминать" "направлять" "ненавидеть" "обучать" "оказывать" "описывать" "определять" "осложнять" "оставаться" "открывать" "отозвать" "отражать" "отсылать" "перевязывать" "повторять" "подтверждать" "подчинять" "показывать" "помогать" "посвящать" "предоставлять" "предпочитать" "принадлежать" "присваивать" "радоваться" "раскрывать" "резать" "рекомендовать" "ремонтировать" "ручаться" "светить" "служить" "собирать" "советовать" "сообщать" "соответствовать" "сопровождать" "составлять" "таскать" "удвоить" "удивляться" "упрощать" "устраивать" "характеризовать" "чинить" "явиться" "нравиться" "предать" "учить" "противопоставлять" ; # Clean up this list! # Check "предать"/"учить"!


SET Sem/Time = Month | Months | Year | Century | Season | Seasons | TimeOfDay | ("период") ; 

SET Sem/Distance = ("километр") | ("метр") ; 

SET Sem/Quantity = ("дюжина") ;

SET Sem/Weight = ("килограмм") | ("грамм") ;

SET Sem/Unit = Sem/Time | Sem/Distance | Sem/Weight | Sem/Quantity ; 

SET Sem/Person = PersonTitle | Profession ; 

SET MscFemNeu = Msc | Fem | Neu ; 

SET Prep/Prp = Pr/Pri | Pr/Na | Pr/V | Pr/O | Pr/Po ; 

SET Prep/Ins = Pr/S | Pr/Nad | Pr/Pod | Pr/Meždu | Pr/Pered ;

SET Prep/Acc = Pr/Na | Pr/V | Pr/Po | Pr/Pod | Pr/Čerez ; # complete

SET Prep/Dat =  Pr/K | Pr/Soglasno | Pr/Po | Pr/Blagodarja ; 

SET Prep/Gen = Pr/Protiv | Pr/Naprotiv | Pr/Vnutri ; # complete

SET NBR = Sg | Pl ;

SET MFN = Msc | Fem | Neu ; 

SET NGDAIP = Nom | Gen | Dat | Acc | Ins | Prp | Loc ;  

SET Modif = Det | A - Short | Ord | ("же" part) ; # Fix tag of že

SET ModAcc = Modif + Acc ; 
SET ModPrp = Modif + Prp ; 

SET SentNotExcl = (".") | ("...") | ("?") | (":")  ; 

SET Punct = Guio | Cm | Excl | Ques ;

SET CLB = Rel | CS ;





# ===================================== #
#!! Grammarchecker rules begin here 
# ===================================== #


#!! ## Grammarchecker sets

LIST &err-agr = &err-agr ;
LIST &err-gen-po = &err-gen-po ;
LIST &err-no-conneg = &err-no-conneg ;
LIST &err-orrood-inf = &err-orrood-inf ;
LIST &err-ext-agr = &err-ext-agr ;
LIST &err-ext-vagr = &err-ext-vagr ;

MAPPING-PREFIX = & ;




#!! ## Grammarchecker rules

SECTION

# Speller suggestions rule – add &SUGGESTWF to any spelling suggestion
# that we actually want to suggest to the user.
# The simplest is to just add it to all spelled words:
ADD:spell-it-all (&typo &SUGGESTWF) (<spelled>) ;
# But perhaps you want to only suggest spellings of words that are not inside "quotes":
ADD:spell-conservatively (&typo &SUGGESTWF) (<spelled>) IF (NEGATE -1 Ques LINK 2 Ques);

# A simple grammar checker rule without suggestions: Ensure preceding nominal agrees with the verb
ADD:err-agr (&err-agr) TARGET V IF (-1C Sg + Nom) (0 V) (NOT 0 Sg3);
ADD:err-agr (&err-agr) TARGET V IF (-1C Pron + Sg1 + Nom) (0 V) (NOT 0 Sg1);
ADD:err-agr (&err-agr) TARGET V IF (-1C Pron + Sg2 + Nom) (0 V) (NOT 0 Sg2);
ADD:err-agr (&err-agr) TARGET V IF (-1C Pron + Pl1 + Nom) (0 V) (NOT 0 Pl1);
ADD:err-agr (&err-agr) TARGET V IF (-1C Pron + Pl2 + Nom) (0 V) (NOT 0 Pl2);

ADD:err-poss-concord-neusg (&err-poss-concord-neusg) TARGET Pron IF (0 Pron + Pos + Msc)(0 Neu);
#ok Это мое яблоко.
#err Это мой яблоко.

# And one with a suggestion where we simply change the tag Sg into Attr:
ADD:attr-not-pred (&attr-not-pred) TARGET (A Sg) IF (NOT 0 Attr OR Gen) (1 CC LINK *1 COMMON-N) ;
COPY:attr-not-pred (Attr &SUGGEST) EXCEPT (Sg) TARGET (&attr-not-pred) ;
# The method is: Add &SUGGEST to a copied reading to *generate* a
# suggestion form from that reading. The copy should contain the error
# tag too – &-prefixed error tags are ignored when generating, but
# used to create human-readable messages.

# Simple punctuation rules showing how to change the lemma in the suggestions:
ADD:use-guillemets (&guillemets) TARGET (""");
COPY:left-guillemet ("«" &SUGGEST) EXCEPT (""") TARGET (&guillemets) ;
COPY:right-guillemet ("»" &SUGGEST) EXCEPT (""") TARGET (&guillemets) ;

ADD:use-ellipsis (&ellipsis) TARGET ("...");
COPY:use-ellipsis ("…" &SUGGEST) EXCEPT ("...") TARGET (&ellipsis) ;
